Index: .idea/libraries/Maven__org_json_json_20220320.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_json_json_20220320.xml b/.idea/libraries/Maven__org_json_json_20220320.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__org_json_json_20220320.xml	
+++ /dev/null	
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.json:json:20220320">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/json/json/20220320/json-20220320.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/json/json/20220320/json-20220320-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/json/json/20220320/json-20220320-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_google_code_gson_gson_2_9_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_google_code_gson_gson_2_9_0.xml b/.idea/libraries/Maven__com_google_code_gson_gson_2_9_0.xml
deleted file mode 100644
--- a/.idea/libraries/Maven__com_google_code_gson_gson_2_9_0.xml	
+++ /dev/null	
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: com.google.code.gson:gson:2.9.0">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/gson/gson/2.9.0/gson-2.9.0.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/gson/gson/2.9.0/gson-2.9.0-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/gson/gson/2.9.0/gson-2.9.0-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: project-group-29.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_17\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.code.gson:gson:2.9.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.json:json:20220320\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project-group-29.iml b/project-group-29.iml
--- a/project-group-29.iml	
+++ b/project-group-29.iml	
@@ -10,6 +10,5 @@
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.9.0" level="project" />
-    <orderEntry type="library" name="Maven: org.json:json:20220320" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: src/main/java/views/LoginMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package views;\r\n\r\nimport controllers.LoginController;\r\nimport enums.LoginMenuCommands;\r\n\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class LoginMenu {\r\n    private static LoginMenu instance = null;\r\n\r\n    private LoginMenu() {\r\n    }\r\n\r\n    public static LoginMenu getInstance() {\r\n        if (instance == null)\r\n            instance = new LoginMenu();\r\n        return instance;\r\n    }\r\n\r\n    public void run(Scanner scanner) {\r\n        String message;\r\n        while (true) {\r\n            String command = scanner.nextLine();\r\n            Matcher matcher;\r\n            if ((matcher = LoginMenuCommands.isMatchCreateUser(command)) != null)\r\n                System.out.println(LoginController.getInstance().createUser(matcher));\r\n            else if ((matcher = LoginMenuCommands.isMatchLoginUser(command)) != null)\r\n                System.out.println(LoginController.getInstance().loginUser(matcher));\r\n            else if (command.equals(\"menu exit\")) {\r\n                LoginController.getInstance().writeUserInfo();\r\n                System.exit(0);\r\n            }\r\n            else if (command.equals(\"menu show-current\"))\r\n                System.out.println(\"Login menu\");\r\n            else if ((matcher = LoginMenuCommands.isMatch(command, LoginMenuCommands.ENTER_MENU)) != null) {\r\n                message = LoginController.getInstance().enterMenu(matcher);\r\n                if (message.equals(\"\"))\r\n                    break;\r\n                System.out.println(message);\r\n            } else\r\n                System.out.println(\"invalid command\");\r\n        }\r\n        MainMenu.getInstance().run(scanner);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/views/LoginMenu.java b/src/main/java/views/LoginMenu.java
--- a/src/main/java/views/LoginMenu.java	
+++ b/src/main/java/views/LoginMenu.java	
@@ -28,7 +28,7 @@
             else if ((matcher = LoginMenuCommands.isMatchLoginUser(command)) != null)
                 System.out.println(LoginController.getInstance().loginUser(matcher));
             else if (command.equals("menu exit")) {
-                LoginController.getInstance().writeUserInfo();
+                //LoginController.getInstance().writeUserInfo();
                 System.exit(0);
             }
             else if (command.equals("menu show-current"))
Index: src/main/java/controllers/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers;\r\n\r\nimport com.google.gson.reflect.TypeToken;\r\nimport models.User;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport com.google.gson.Gson;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class LoginController {\r\n    private static LoginController instance = null;\r\n\r\n    private LoginController() {\r\n    }\r\n\r\n    public static LoginController getInstance() {\r\n        if (instance == null) {\r\n            instance = new LoginController();\r\n            readUserInfo();\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public String createUser(Matcher matcher) {\r\n        String username = matcher.group(\"username\");\r\n        String password = matcher.group(\"password\");\r\n        String nickname = matcher.group(\"nickname\");\r\n\r\n        if (MainController.getInstance().isExistUsername(username) != null)\r\n            return \"user with username \" + username + \" already exists\";\r\n        if (ProfileController.getInstance().isExistNickname(nickname) != null)\r\n            return \"user with nickname \" + nickname + \" already exists\";\r\n        User user = new User(username, password, nickname);\r\n        return \"user created successfully!\";\r\n    }\r\n\r\n    public String loginUser(Matcher matcher) {\r\n        String username = matcher.group(\"username\");\r\n        String password = matcher.group(\"password\");\r\n\r\n        User user;\r\n        if ((user = MainController.getInstance().isExistUsername(username)) == null)\r\n            return \"Username and password didn’t match!\";\r\n        if (!user.getPassword().equals(password))\r\n            return \"Username and password didn’t match!\";\r\n        User.setLoggedInUser(user);\r\n        return \"user logged in successfully!\";\r\n    }\r\n\r\n    public String enterMenu(Matcher matcher) {\r\n        String menuName = matcher.group(\"menuName\");\r\n        if (User.getLoggedInUser() == null)\r\n            return \"please login first\";\r\n        if (menuName.equals(\"Main Menu\"))\r\n            return \"\";\r\n        return \"menu navigation is not possible\";\r\n    }\r\n\r\n\r\n\r\n    public void writeUserInfo() {\r\n        try {\r\n            FileWriter fileWriter = new FileWriter(\"user.txt\");\r\n            fileWriter.write(new Gson().toJson(User.getAllUsers()));\r\n            fileWriter.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private static void readUserInfo() {\r\n        try {\r\n            String info = new String(Files.readAllBytes(Paths.get(\"user.txt\")));\r\n            User.setAllUsers(new Gson().fromJson(info, new TypeToken<List<User>>(){}.getType()));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/LoginController.java b/src/main/java/controllers/LoginController.java
--- a/src/main/java/controllers/LoginController.java	
+++ b/src/main/java/controllers/LoginController.java	
@@ -1,6 +1,5 @@
 package controllers;
 
-import com.google.gson.reflect.TypeToken;
 import models.User;
 
 import java.io.FileWriter;
@@ -9,7 +8,6 @@
 import java.nio.file.Paths;
 import java.util.ArrayList;
 import java.util.List;
-import com.google.gson.Gson;
 import java.util.regex.Matcher;
 
 public class LoginController {
@@ -21,7 +19,7 @@
     public static LoginController getInstance() {
         if (instance == null) {
             instance = new LoginController();
-            readUserInfo();
+            //readUserInfo();
         }
         return instance;
     }
@@ -63,7 +61,7 @@
 
 
 
-    public void writeUserInfo() {
+    /*public void writeUserInfo() {
         try {
             FileWriter fileWriter = new FileWriter("user.txt");
             fileWriter.write(new Gson().toJson(User.getAllUsers()));
@@ -81,5 +79,5 @@
             e.printStackTrace();
         }
 
-    }
+    }*/
 }
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>project-group-29</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n    </properties>\r\n    <dependencies>\r\n\r\n        <dependency>\r\n            <groupId>com.google.code.gson</groupId>\r\n            <artifactId>gson</artifactId>\r\n            <version>2.9.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.json</groupId>\r\n            <artifactId>json</artifactId>\r\n            <version>20220320</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -19,11 +19,6 @@
             <artifactId>gson</artifactId>
             <version>2.9.0</version>
         </dependency>
-        <dependency>
-            <groupId>org.json</groupId>
-            <artifactId>json</artifactId>
-            <version>20220320</version>
-        </dependency>
     </dependencies>
 
 
